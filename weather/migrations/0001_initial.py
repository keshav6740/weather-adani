# Generated by Django 5.1.7 on 2025-06-03 20:14

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WeatherSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('capacity', models.CharField(max_length=50)),
                ('site_type', models.CharField(choices=[('Solar', 'Solar'), ('Wind', 'Wind'), ('Hybrid', 'Hybrid')], max_length=20)),
                ('state', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('temperature_max', models.FloatField(blank=True, null=True)),
                ('temperature_min', models.FloatField(blank=True, null=True)),
                ('humidity', models.FloatField(blank=True, null=True)),
                ('wind_speed', models.FloatField(blank=True, null=True)),
                ('wind_direction', models.FloatField(blank=True, null=True)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('precipitation', models.FloatField(blank=True, null=True)),
                ('precipitation_probability', models.FloatField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='weather.weathersite')),
            ],
            options={
                'ordering': ['forecast_time'],
                'indexes': [models.Index(fields=['site', 'forecast_time'], name='weather_wea_site_id_1b8634_idx')],
                'unique_together': {('site', 'forecast_time')},
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.FloatField(blank=True, help_text='Temperature in Celsius', null=True)),
                ('humidity', models.FloatField(blank=True, help_text='Relative humidity in %', null=True)),
                ('wind_speed', models.FloatField(blank=True, help_text='Wind speed in m/s', null=True)),
                ('wind_direction', models.FloatField(blank=True, help_text='Wind direction in degrees', null=True)),
                ('pressure', models.FloatField(blank=True, help_text='Atmospheric pressure in hPa', null=True)),
                ('precipitation', models.FloatField(blank=True, help_text='Precipitation in mm', null=True)),
                ('uv_index', models.FloatField(blank=True, help_text='UV Index', null=True)),
                ('cloud_cover', models.FloatField(blank=True, help_text='Cloud cover in %', null=True)),
                ('visibility', models.FloatField(blank=True, help_text='Visibility in km', null=True)),
                ('feels_like', models.FloatField(blank=True, help_text='Feels like temperature in Celsius', null=True)),
                ('dew_point', models.FloatField(blank=True, help_text='Dew point in Celsius', null=True)),
                ('surface_pressure', models.FloatField(blank=True, help_text='Surface pressure in hPa', null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_data', to='weather.weathersite')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['site', '-timestamp'], name='weather_wea_site_id_28c07b_idx')],
            },
        ),
        migrations.CreateModel(
            name='WeatherAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('SEVERE', 'Severe Weather'), ('EXTREME', 'Extreme Weather')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='weather.weathersite')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['site', '-created_at'], name='weather_wea_site_id_098f88_idx'), models.Index(fields=['is_active', '-created_at'], name='weather_wea_is_acti_ef95d5_idx')],
            },
        ),
    ]
